import { ChangeEvent } from 'react';
import classNames from 'classnames';

export type PaymentMethod = 'card' | 'applePay' | 'googlePay';

const paymentMethodOptions = {
  card: {
    text: 'Credit or debit card',
    icon: (
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path
          d="M21.75 3.75H2.25C1.83516 3.75 1.5 4.08516 1.5 4.5V19.5C1.5 19.9148 1.83516 20.25 2.25 20.25H21.75C22.1648 20.25 22.5 19.9148 22.5 19.5V4.5C22.5 4.08516 22.1648 3.75 21.75 3.75ZM3.1875 5.4375H20.8125V8.25H3.1875V5.4375ZM20.8125 18.5625H3.1875V10.3125H20.8125V18.5625ZM15.2578 17.0625H19.125C19.2281 17.0625 19.3125 16.9781 19.3125 16.875V15.1875C19.3125 15.0844 19.2281 15 19.125 15H15.2578C15.1547 15 15.0703 15.0844 15.0703 15.1875V16.875C15.0703 16.9781 15.1547 17.0625 15.2578 17.0625Z"
          fill="#4F555F"
        />
      </svg>
    ),
  },
  applePay: {
    text: 'Apple Pay',
    icon: (
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <g clipPath="url(#clip0_3728_6754)">
          <path
            d="M12.5915 10.4333C12.5915 11.1503 12.1543 11.5627 11.3833 11.5627H10.3708V9.3045H11.3878C12.1543 9.3045 12.5915 9.7125 12.5915 10.4333ZM14.5708 13.0417C14.5708 13.3875 14.8708 13.6125 15.3418 13.6125C15.9418 13.6125 16.3918 13.2338 16.3918 12.6998V12.3787L15.4123 12.441C14.858 12.4785 14.5708 12.6825 14.5708 13.041V13.0417ZM23.9998 4.62525V19.2922C23.9996 19.8227 23.7888 20.3313 23.4137 20.7064C23.0386 21.0815 22.53 21.2923 21.9995 21.2925H1.99927C1.46883 21.2923 0.960179 21.0815 0.585103 20.7064C0.210026 20.3313 -0.000777785 19.8227 -0.000976562 19.2922V4.62525C-0.000777785 4.09481 0.210026 3.58616 0.585103 3.21108C0.960179 2.836 1.46883 2.6252 1.99927 2.625H21.9995C22.53 2.6252 23.0386 2.836 23.4137 3.21108C23.7888 3.58616 23.9996 4.09481 23.9998 4.62525ZM5.32477 9.54975C5.67502 9.579 6.02452 9.375 6.24577 9.11625C6.46252 8.84925 6.60427 8.4915 6.56677 8.1285C6.25852 8.14125 5.87527 8.3325 5.65402 8.5995C5.45377 8.829 5.28352 9.1995 5.32477 9.54975ZM7.85002 12.654C7.84177 12.6458 7.03327 12.3375 7.02502 11.4037C7.01677 10.6245 7.66252 10.2495 7.69177 10.2285C7.32502 9.687 6.75802 9.6285 6.56227 9.61575C6.05377 9.5865 5.62027 9.903 5.37877 9.903C5.13277 9.903 4.76602 9.62775 4.36627 9.63675C4.10529 9.64368 3.85067 9.71886 3.62776 9.85478C3.40486 9.99071 3.22144 10.1827 3.09577 10.4115C2.54977 11.3535 2.95402 12.7448 3.48352 13.5112C3.74152 13.89 4.05427 14.307 4.46302 14.2905C4.85002 14.274 5.00452 14.0408 5.47102 14.0408C5.94202 14.0408 6.07552 14.2905 6.48352 14.2867C6.90877 14.2785 7.17127 13.908 7.43377 13.5285C7.72102 13.095 7.84177 12.6788 7.85077 12.6532L7.85002 12.654ZM13.4915 10.4295C13.4915 9.321 12.7205 8.56275 11.6203 8.56275H9.48727V14.2463H10.3708V12.3045H11.5918C12.7085 12.3045 13.4915 11.538 13.4915 10.4295ZM17.2415 11.4165C17.2415 10.596 16.583 10.0665 15.575 10.0665C14.6375 10.0665 13.946 10.6042 13.9205 11.337H14.7163C14.783 10.9867 15.1078 10.758 15.5495 10.758C16.091 10.758 16.391 11.0078 16.391 11.475V11.7878L15.2908 11.8545C14.2655 11.9167 13.712 12.3383 13.712 13.0673C13.712 13.8045 14.2828 14.292 15.1033 14.292C15.6575 14.292 16.1698 14.013 16.403 13.5668H16.4195V14.25H17.2363V11.4165H17.2415ZM21.5 10.1205H20.6045L19.5673 13.479H19.5508L18.5135 10.1205H17.5843L19.0798 14.2582L19.001 14.508C18.8675 14.9332 18.647 15.0997 18.2555 15.0997C18.1692 15.0982 18.0829 15.0939 17.9968 15.087V15.7703C18.047 15.7868 18.2675 15.7913 18.3343 15.7913C19.1968 15.7913 19.601 15.462 19.955 14.466L21.5 10.1205Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_3728_6754">
            <rect width="24" height="24" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
  googlePay: {
    text: 'Google Pay',
    icon: (
      <svg width="30" height="24" viewBox="0 0 30 24" fill="none">
        <g clipPath="url(#clip0_3788_6872)">
          <path
            d="M4.95562 10.0782V12.0118H7.63218C7.5782 12.3201 7.46263 12.6143 7.29237 12.8768C7.1221 13.1394 6.90065 13.3649 6.64124 13.5399C6.19405 13.847 5.62312 14.0218 4.95374 14.0218C3.65999 14.0218 2.5664 13.1354 2.17405 11.949C1.96875 11.3248 1.96875 10.6513 2.17405 10.0271C2.5664 8.83369 3.65999 7.94728 4.95374 7.94728C5.30442 7.94075 5.6529 8.00402 5.9789 8.13343C6.3049 8.26283 6.60191 8.45577 6.85265 8.70103L8.27202 7.26572C7.37808 6.41638 6.18865 5.94834 4.95562 5.96072C4.03322 5.96426 3.13018 6.22558 2.34844 6.71518C1.5667 7.20479 0.937388 7.90317 0.531555 8.7315C0.181979 9.43153 0 10.2033 0 10.9857C0 11.7682 0.181979 12.5399 0.531555 13.2399V13.247C0.937499 14.0748 1.56698 14.7726 2.3488 15.2613C3.13062 15.75 4.0336 16.0103 4.95562 16.0126C6.29015 16.0126 7.4189 15.5659 8.23687 14.7981C9.17437 13.9257 9.70921 12.6348 9.70921 11.0992C9.70975 10.7572 9.68232 10.4157 9.62718 10.0782H4.95562ZM23.2092 9.89072C22.7344 9.45103 22.0875 9.22791 21.2691 9.22791C20.2162 9.22791 19.425 9.61884 18.9019 10.3932L19.8792 11.0148C20.237 10.4835 20.7255 10.2179 21.3445 10.2179C21.7387 10.2189 22.1185 10.3656 22.4109 10.6299C22.5534 10.7537 22.6677 10.9065 22.7461 11.0782C22.8244 11.2499 22.865 11.4364 22.8652 11.6251V11.8834C22.4386 11.6457 21.9019 11.5201 21.2414 11.5201C20.4708 11.5201 19.8516 11.702 19.3903 12.0718C18.9291 12.4417 18.6956 12.9301 18.6956 13.5512C18.6884 13.8288 18.7433 14.1044 18.8564 14.3581C18.9695 14.6117 19.1378 14.8368 19.3491 15.017C19.7826 15.4079 20.3334 15.6034 20.9798 15.6034C21.7434 15.6034 22.3491 15.2612 22.808 14.5773H22.8548V15.4079H23.9147V11.7188C23.918 10.9431 23.6841 10.3285 23.2092 9.89072ZM22.3078 14.0767C22.1452 14.2421 21.9514 14.3735 21.7376 14.4633C21.5238 14.5531 21.2942 14.5995 21.0623 14.5998C20.7506 14.605 20.4468 14.5014 20.2031 14.3068C20.0894 14.2216 19.9973 14.111 19.934 13.9837C19.8708 13.8565 19.8382 13.7162 19.8389 13.5742C19.8389 13.246 19.9898 12.9737 20.2861 12.7576C20.5823 12.5415 20.9672 12.4295 21.4144 12.4295C22.0312 12.422 22.5141 12.5626 22.8581 12.841C22.8581 13.3159 22.6725 13.7274 22.3078 14.0767ZM17.918 7.42041C17.6692 7.17173 17.3728 6.97587 17.0465 6.84458C16.7202 6.71328 16.3707 6.64925 16.0191 6.65634H13.0814V15.4098H14.1891V11.8642H16.0172C16.7672 11.8642 17.4 11.6129 17.9161 11.1174C17.9573 11.0757 17.9986 11.0335 18.0403 10.9918C18.492 10.4989 18.7322 9.84837 18.7093 9.18017C18.6865 8.51197 18.4023 7.87943 17.918 7.41853V7.42041ZM17.1408 10.3374C17.0011 10.4865 16.8313 10.6041 16.6427 10.6823C16.454 10.7605 16.2508 10.7977 16.0467 10.7912H14.1891V7.73447H16.0467C16.4431 7.73303 16.824 7.88858 17.1061 8.16713C17.3931 8.45291 17.5572 8.83936 17.5637 9.2443C17.5702 9.64925 17.4185 10.0407 17.1408 10.3356V10.3374ZM28.7958 9.42197L27.083 13.7204H27.0619L25.3078 9.42197H24.1036L26.5312 15.0259L25.1555 18.0409H26.2969L30 9.42197H28.7958Z"
            fill="white"
          />
        </g>
        <defs>
          <clipPath id="clip0_3788_6872">
            <rect width="30" height="24" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
};

interface SelectPaymentMethodProps {
  paymentMethods: PaymentMethod[];
  selectedPaymentMethod: PaymentMethod;
  setSelectedPaymentMethod: (method: PaymentMethod) => void;
}
export function SelectPaymentMethod({
  paymentMethods,
  selectedPaymentMethod,
  setSelectedPaymentMethod,
}: SelectPaymentMethodProps) {
  return (
    <div className="flex flex-col">
      {paymentMethods.map((method) => (
        <div
          key={method}
          className="px-6 py-4 border-b border-l border-r border-dawnDark-400 first:border-t first:rounded-t-dawnDefault last:rounded-b-dawnDefault"
        >
          <SelectPaymentMethodRadioInput
            method={method}
            checked={method === selectedPaymentMethod}
            optionText={paymentMethodOptions[method].text}
            optionIcon={paymentMethodOptions[method].icon}
            onChange={(event: any) => setSelectedPaymentMethod(event.target.value)}
          />
        </div>
      ))}
    </div>
  );
}
interface SelectPaymentMethodRadioInputProps {
  method: PaymentMethod;
  checked: boolean;
  optionText: string;
  optionIcon: React.ReactNode;
  onChange: (event: ChangeEvent) => void;
}
function SelectPaymentMethodRadioInput({
  method,
  checked,
  optionText,
  optionIcon,
  onChange,
}: SelectPaymentMethodRadioInputProps) {
  return (
    <label htmlFor={method} className="flex items-center space-x-4 cursor-pointer">
      <div>
        <input
          type="radio"
          value={method}
          id={method}
          className="hidden"
          name={method}
          onChange={onChange}
          checked={checked}
        />
        <div
          className={classNames(
            checked ? 'bg-gradient-to-bl' : 'border border-dawnDark-300',
            'md:h-5 md:w-5 h-4 w-4  from-dawnOrange-500 to-dawnPurple-500 flex items-center justify-center rounded-full'
          )}
        >
          <div className={classNames('w-1 h-1 rounded-full bg-dawnDark-700', { hidden: !checked })} />
        </div>
      </div>
      <div className="flex justify-between w-full">
        <span className="text-base xl:text-xl xl:leading-8 font-inter">{optionText}</span>
        {optionIcon}
      </div>
    </label>
  );
}
